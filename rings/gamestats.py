import discord
from discord.ext import commands

from rings.utils.utils import react_menu


class GameStats:
    """A cog to get game stats from various game APIs, very useful to show game stats on discord."""
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    async def ow(self, ctx, username, region="eu", hero=None):
        """Creates a rich embed of the user's Owerwatch stats for PC only. You must parse through a valid Battle.NET Battle 
        Tag and optionally a region. You can also optionally parse in a hero's name to start the embeds at this hero.


        {usage}


        __Example__
        `{pre}ow FakeTag#1234 us` - generates an embed for user FakeTag#1234 in region us
        `{pre}ow FakeTag#0000 eu Winston` - generates an embed for user FakeTag#0000 in region eu starting at winston"""
        def get_a_hero_stat(hero_int):
            prog_list = ["__**"+hero.title()+"**__" if hero_list.index(hero) == hero_int else hero.title() for hero in hero_list]
            prog = " - ".join(prog_list)
            embed = discord.Embed(title="**" + username.replace("-", "#") + "** in region: " + region.upper(), colour=discord.Colour(0x277b0), description=prog)
            embed.set_footer(text="Generated by NecroBot", icon_url="https://cdn.discordapp.com/avatars/317619283377258497/a491c1fb5395e699148fcfed2ee755cf.jpg?size=128")

            s = data[region]["heroes"]["stats"]["quickplay"][hero_list[hero_int]]

            # general stats
            stats = list()
            to_find = ["deaths", "medals", "weapon_accuracy", "all_damage_done", "kill_streak_best", "time_played", "games_won"]
            for stat in to_find:
                try:
                    title = stat
                    if "most" in stat:
                        title = "Most " + stat.replace("most_", "")
                    stats.append(title.replace("_", " ").title() + ": " + "{0:.2f}".format(s["general_stats"][stat]))
                except KeyError:
                    pass

            embed.add_field(name="General Stats", value="-" + "\n-".join(stats), inline=False)

            # hero specific stats
            stats = list()
            for stat in s["hero_stats"]:
                title = stat
                if "most" in stat:
                    title = "Most " + stat.replace("most_", "")

                stats.append(title.replace("_", " ").title() + ": " + "{0:.2f}".format(s["hero_stats"][stat]))

            embed.add_field(name="Hero Stats", value="-" + "\n-".join(stats), inline=False)

            return embed

        async with ctx.message.channel.typing():
            username = username.replace("#", "-")
            headers = {"User-Agent":"NecroBot"}
            async with self.bot.session.get("https://owapi.net/api/v3/u/{}/heroes".format(username), headers=headers) as r:
                try:
                    data = await r.json()
                except Exception as e:
                    print(await r.text())

            hero_list = list(data[region]["heroes"]["stats"]["quickplay"].keys())

            if not hero:
                hero_int = 0
            else:
                try:
                    hero_int = hero_list.index(hero.lower())
                except:
                    hero_int = 0

        await react_menu(self.bot, ctx, len(hero_list)-1, get_a_hero_stat, hero_int)


def setup(bot):
    bot.add_cog(GameStats(bot))