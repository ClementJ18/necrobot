#!/usr/bin/python3.6
import discord
from discord.ext import commands
from discord.ext.commands.cooldowns import BucketType

import wikia

class Wiki():
    """A series of wikia-related commands. Used to search the biggest fan-made database of 
    information."""
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    @commands.cooldown(2, 5, BucketType.user)
    async def edain(self, *, article : str):
        """Performs a search on the Edain Mod Wiki for the give article name. If an article is found then it will return a rich embed of it, else it will return a list of a related articles and an embed of the first related article. 
        
        {usage}
        
        __Example__
        `{pre}edain Castellans` - print a rich embed of the Castellans page
        `{pre}edain Battering Ram` - prints a rich embed of the Battering Ram disambiguation page"""
        try:
            article = wikia.page("edain", article)
        except wikia.wikia.WikiaError:
            try:
                search_list = wikia.search("edain", article)
                await self.bot.say("Article: **{}** not found, returning first search result and the following search list: {}".format(article, search_list[1:]))
                article = wikia.page("edain", search_list[0])
            except ValueError:
                await self.bot.say(":negative_squared_cross_mark: | Article not found, and search didn't return any results. Please try again with different terms.")
                return

        url = article.url.replace(" ","_")
        embed = discord.Embed(title="__**{}**__".format(article.title), colour=discord.Colour(0x277b0), url=url, description=article.section(article.sections[0]))

        try:
            embed.set_thumbnail(url=article.images[0]+"?size=400")
        except (IndexError, AttributeError, KeyError):
            pass

        embed.set_author(name=article.sub_wikia + " Wiki", url="http://edain.wikia.com/", icon_url="http://i.imgur.com/lPPQzRg.png")
        embed.set_footer(text="Generated by NecroBot", icon_url="https://cdn.discordapp.com/avatars/317619283377258497/a491c1fb5395e699148fcfed2ee755cf.jpg?size=128")

        if "Abilities" in article.sections:
            if len(article.section("Abilities")) < 1024  and len(article.section("Abilities")) > 0:
                embed.add_field(name="Abilities", value=article.section("Abilities"))
            else:
                for x in article.sections[1:]:
                    if len(article.section(x)) < 1024 and len(article.section(x)) > 0:
                        embed.add_field(name=x, value=article.section(x))
                        break
        else:
            for x in article.sections[1:]:
                if len(article.section(x)) < 1024 and len(article.section(x)) > 0:
                    embed.add_field(name=x, value=article.section(x))
                    break

        if len(article.related_pages) > 0:
            related ="- " + "\n- ".join(article.related_pages[:3])
            embed.add_field(name="More Pages:", value=related)

        embed.add_field(name="Quotes", value="Get all the sound quotes for units/heroes [here](http://edain.wikia.com/wiki/Edain_Mod_Soundsets)")

        await self.bot.say(embed=embed)

    @commands.command()
    @commands.cooldown(2, 5, BucketType.user)
    async def lotr(self, *, article : str):
        """Performs a search on the Lord of the Rings Wiki for the give article name. If an article is found then it will return a rich embed of it, else it will return a list of a related articles and an embed of the first related article. 

        {usage}

        __Example__
        `{pre}lotr Finrod` - creates an embed of Finrod Felagund
        `{pre}lotr Fellowship` - searches for 'Fellowship' and returns the first result"""
        try:
            article = wikia.page("lotr", article)
        except wikia.wikia.WikiaError:
            try:
                search_list = wikia.search("lotr", article)
                await self.bot.say("Article: **{}** not found, returning first search result and the following search list: {}".format(article, search_list[1:]))
                article = wikia.page("lotr", search_list[0])
            except ValueError:
                await self.bot.say(":negative_squared_cross_mark: | Article not found, and search didn't return any result. Please try again with different terms.")
                return

        url = article.url.replace(" ","_")

        embed = discord.Embed(title="__**{}**__".format(article.title), colour=discord.Colour(0x277b0), url=url, description=article.section(article.sections[0]))

        try:
            embed.set_thumbnail(url=article.images[0]+"?size=400")
        except (IndexError, AttributeError, KeyError):
            pass

        embed.set_author(name="LOTR Wiki", url="http://lotr.wikia.com/", icon_url="http://i.imgur.com/YWn19eW.png")
        embed.set_footer(text="Generated by NecroBot", icon_url="https://cdn.discordapp.com/avatars/317619283377258497/a491c1fb5395e699148fcfed2ee755cf.jpg?size=128")

        if len(article.related_pages) > 0:
            related ="- " + "\n- ".join(article.related_pages[:5])
            embed.add_field(name="More Pages:", value=related)

        await self.bot.say(embed=embed)

    @commands.command()
    @commands.cooldown(2, 5, BucketType.user)
    async def wiki(self, wiki, *, article):
        """Performs a search on the given wiki (if valid) for the given article name. If an article is found then it will return a rich embed of it, else it will return a list of a related articles and an embed of the first related article. 

        {usage}

        __Example__
        `{pre}wiki disney Donald Duck` - creates a rich embed of the Donald Duck page
        `{pre}wiki transformers Optimus` - searches for the 'Optimus Page' and returns a list of search results and a rich embed of the first one."""
        try:
            article = wikia.page(wiki, article)
        except wikia.wikia.WikiaError:
            try:
                search_list = wikia.search(wiki, article)
                await self.bot.say("Article: **{}** not found, returning first search result and the following search list: {}".format(article, search_list[1:]))
                article = wikia.page(wiki, search_list[0])
            except ValueError:
                await self.bot.say(":negative_squared_cross_mark: | Article not found or wiki not recognized, and search didn't return any result. Please try again with different terms.")
                return

        url = article.url.replace(" ","_")

        embed = discord.Embed(title="__**{}**__".format(article.title), colour=discord.Colour(0x277b0), url=url, description=article.section(article.sections[0]))

        try:
            embed.set_thumbnail(url=article.images[0]+"?size=400")
        except (IndexError, AttributeError, KeyError):
            pass

        embed.set_author(name=article.sub_wikia.title() + " Wiki", url="http://"+ article.sub_wikia + ".wikia.com/", icon_url="https://vignette3.wikia.nocookie.net/"+ article.sub_wikia +"/images/6/64/Favicon.ico")
        embed.set_footer(text="Generated by NecroBot", icon_url="https://cdn.discordapp.com/avatars/317619283377258497/a491c1fb5395e699148fcfed2ee755cf.jpg?size=128")

        if len(article.related_pages) > 0:
            related ="- " + "\n- ".join(article.related_pages[:5])
            embed.add_field(name="More Pages:", value=related)

        await self.bot.say(embed=embed)

def setup(bot):
    bot.add_cog(Wiki(bot))