import discord
from discord.ext import commands
from discord.ext.commands.cooldowns import BucketType

from simpleeval import simple_eval
import time

class Utilities():
    def __init__(self, bot):
        self.bot = bot

    # evaluates the the argument as a mathematical equation
    @commands.command()
    @commands.cooldown(3, 5, BucketType.user)
    async def calc(self, *, arg0 : str):
        try:
            final = simple_eval(arg0)
            await self.bot.say(final)
        except NameError:
            await self.bot.say(":negative_squared_cross_mark: | **Mathematical equation not recognized.**")

    @commands.command(pass_context=True)
    @commands.cooldown(3, 5, BucketType.user)
    async def ping(self, cont):
        pingtime = time.time()
        pingms = await self.bot.say("Pinging... {}'s location".format(cont.message.author.display_name))
        ping = time.time() - pingtime
        await self.bot.edit_message(pingms, "The ping time is `%.01f seconds`" % ping)

    #prints a rich embed of the server info it was called in
    @commands.command(pass_context = True)
    @commands.cooldown(1, 5, BucketType.user)
    async def serverinfo(self, cont):
        server = cont.message.server
        embed = discord.Embed(title="__**" + server.name + "**__", colour=discord.Colour(0x277b0), description="Info on this server")
        embed.set_thumbnail(url=server.icon_url.replace("webp","jpg"))
        embed.set_footer(text="Generated by NecroBot", icon_url="https://cdn.discordapp.com/avatars/317619283377258497/a491c1fb5395e699148fcfed2ee755cf.jpg?size=128")

        embed.add_field(name="**Date Created**", value=server.created_at.strftime("%d - %B - %Y %H:%M"))
        embed.add_field(name="**Owner**", value=server.owner.name + "#" + server.owner.discriminator, inline=True)

        embed.add_field(name="**Default Channel**", value=server.default_channel)
        embed.add_field(name="**Members**", value=server.member_count, inline=True)

        embed.add_field(name="**Region**", value=server.region)
        embed.add_field(name="**Server ID**", value=server.id, inline=True)

        channelList = [channel.name for channel in server.channels]
        roleList = [role.name for role in server.roles]
        embed.add_field(name="**Channels**", value=str(len(channelList)) + ": " + ", ".join(channelList))
        embed.add_field(name="**Roles**", value=str(len(roleList) - 1) + ": " + ", ".join(roleList[1:]))

        await self.bot.say(embed=embed)

    @commands.command(pass_context = True)
    @commands.cooldown(5, 10, BucketType.channel)
    async def avatar(self, cont, arg0 : discord.Member):
        await self.bot.say(arg0.avatar_url.replace("webp","jpg"))

def setup(bot):
    bot.add_cog(Utilities(bot))