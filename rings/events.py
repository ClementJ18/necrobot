#!/usr/bin/python3.6
import discord
from discord.ext import commands
import traceback

class NecroEvents():
    def __init__(self, bot):
        self.bot = bot

    async def on_command_error(self, ctx, error):
        """Catches error and sends a message to the user that caused the error with a helpful message."""
        channel = ctx.message.channel
        try:
            if ctx.command.name in self.bot.server_data[ctx.message.guild.id]["disabled"] and ctx.prefix != "n@":
                await ctx.send(":negative_squared_cross_mark: | Command {} cannot be used on this server.".format(ctx.command.name), delete_after=10)
                await ctx.message.delete()
                return
        except AttributeError:
            pass

        if isinstance(error, commands.MissingRequiredArgument):
            await channel.send(":negative_squared_cross_mark: | Missing required argument! Check help guide with `n!help {}`".format(ctx.command.name), delete_after=10)
        elif isinstance(error, commands.CheckFailure):
            await channel.send(":negative_squared_cross_mark: | You do not have the required NecroBot permissions to use this command.", delete_after=10)
        elif isinstance(error, commands.CommandOnCooldown):
            await channel.send(":negative_squared_cross_mark: | This command is on cooldown, retry after **{0:.0f}** seconds".format(error.retry_after), delete_after=10)
        elif isinstance(error, commands.NoPrivateMessage):
            await channel.send(":negative_squared_cross_mark: | This command cannot be used in private messages.", delete_after=10)
        elif isinstance(error, commands.DisabledCommand):
            await channel.send(":negative_squared_cross_mark: | This command is disabled and cannot be used for now.", delete_after=10)
        elif isinstance(error, commands.BadArgument):
            await channel.send(":negative_squared_cross_mark: | Something went wrongs with the arguments you sent, make sure you're sending what is required.", delete_after=10)
        elif isinstance(error, discord.Forbidden):
            await channel.send(":negative_squared_cross_mark: | Something went wrong, check my permission level, it seems I'm not allowed to do that on your guild.", delete_after=10)
        elif isinstance(error, commands.CommandInvokeError):
            channel = self.bot.get_channel(415169176693506048)
            the_traceback = "```py\n" + " ".join(traceback.format_exception(type(error), error, error.__traceback__, chain=False)) + "\n```"
            embed = discord.Embed(title="Command Error", description=the_traceback, colour=discord.Colour(0x277b0))
            embed.set_footer(text="Generated by NecroBot", icon_url="https://cdn.discordapp.com/avatars/317619283377258497/a491c1fb5395e699148fcfed2ee755cf.jpg?size=128")
            embed.add_field(name="Command", value=ctx.command.name)
            embed.add_field(name="Author", value=ctx.author.mention)
            embed.add_field(name="Location", value="**Guild:** {0.name} ({0.id}) \n**Channel:** {1.name} ({1.id})".format(ctx.guild, ctx.channel))
            await channel.send(embed=embed)

    async def on_error(self, event, *args, **kwargs):
        channel = self.bot.get_channel(415169176693506048)
        the_traceback = "```py\n{}\n```".format(traceback.format_exc())
        embed = discord.Embed(title="Command Error", description=the_traceback, colour=discord.Colour(0x277b0))
        embed.add_field(name='Event', value=event)
        embed.set_footer(text="Generated by NecroBot", icon_url="https://cdn.discordapp.com/avatars/317619283377258497/a491c1fb5395e699148fcfed2ee755cf.jpg?size=128")
        await channel.send(embed=embed)

    async def on_guild_join(self, guild):
        self.bot.server_data[guild.id] = self.bot._new_server()

        for member in guild.members:
            self.bot.default_stats(member, guild)

        await guild.owner.send(":information_source: I've just been invited to a server you own. Everything is good to go, your server has been set up on my side. However, most of my automatic functionalities are disabled by default (automoderation, welcome-messages and mute). You just need to set those up using `n!settings`. Check out the help with `n!help settings`")

    async def on_message_delete(self, message):
        if isinstance(message.channel, discord.DMChannel) or self.bot.server_data[message.guild.id]["automod"] == "" or message.author.bot:
            return

        role_id = [role.id for role in message.author.roles]
        if message.author.id not in self.bot.server_data[message.guild.id]["ignoreAutomod"] and message.channel.id not in self.bot.server_data[message.guild.id]["ignoreAutomod"] and not any(x in role_id for x in self.bot.server_data[message.guild.id]["ignoreAutomod"]):
            if not message.content:
                message.content = "\U0000200b"

            embed = discord.Embed(title="Message Deleted", description=message.content, colour=discord.Colour(0x277b0))
            embed.set_author(name=message.author, icon_url= message.author.avatar_url)
            embed.set_footer(text="Generated by NecroBot", icon_url="https://cdn.discordapp.com/avatars/317619283377258497/a491c1fb5395e699148fcfed2ee755cf.jpg?size=128")
            embed.add_field(name="Info", value="In " + message.channel.mention + " by " + message.author.mention)
            embed.add_field(name="Attachment?", value="Yes" if message.attachments else "No", inline=False)
            channel = self.bot.get_channel(self.bot.server_data[message.guild.id]["automod"])
            await channel.send(embed=embed)

    async def on_message_edit(self, before, after):
        if isinstance(before.channel, discord.DMChannel) or self.bot.server_data[before.guild.id]["automod"] == "":
            return

        if before.author.bot or before.content == after.content:
            return

        role_id = [role.id for role in before.author.roles]
        if before.author.id not in self.bot.server_data[before.guild.id]["ignoreAutomod"] and before.channel.id not in self.bot.server_data[before.guild.id]["ignoreAutomod"] and not any(x in role_id for x in self.bot.server_data[before.guild.id]["ignoreAutomod"]):
            embed = discord.Embed(title="Message Edited", description="In " + before.channel.mention + " by " + before.author.mention, colour=discord.Colour(0x277b0))
            if not after.content:
                after.content = "\U0000200b"

            embed.set_author(name=before.author, icon_url= before.author.avatar_url)
            embed.set_footer(text="Generated by NecroBot", icon_url="https://cdn.discordapp.com/avatars/317619283377258497/a491c1fb5395e699148fcfed2ee755cf.jpg?size=128")
            embed.add_field(name="Before", value=before.content if len(before.content) < 1024 else before.content[1020:] + "...", inline=False)
            embed.add_field(name="After", value=after.content if len(after.content) < 1024 else after.content[1020:] + "...", inline=False)
            channel = self.bot.get_channel(self.bot.server_data[before.guild.id]["automod"])
            await channel.send(embed=embed)

    async def on_command(self, ctx):
        self.bot.logit(ctx.message)

    async def on_member_join(self, member):
        self.bot.default_stats(member, member.guild)

        if not self.bot.server_data[member.guild.id]["welcome-channel"] == "" and not member.bot and not self.bot.server_data[member.guild.id]["welcome"] == "":
            channel = self.bot.get_channel(self.bot.server_data[member.guild.id]["welcome-channel"])
            message = self.bot.server_data[member.guild.id]["welcome"]
            await channel.send(message.format(member=member.mention, server=member.guild.name))

        if not self.bot.server_data[member.guild.id]["auto-role"] == "":
            role = discord.utils.get(member.guild.roles, id=self.bot.server_data[member.guild.id]["auto-role"])
            await member.add_roles(role)


    async def on_member_remove(self, member):
        if self.bot.user_data[member.id]["perms"][member.guild.id] < 6:
            self.bot.user_data[member.id]["perms"][member.guild.id] = 0

        if self.bot.server_data[member.guild.id]["welcome-channel"] == "" or member.bot or self.bot.server_data[member.guild.id]["goodbye"] == "":
            return

        channel = self.bot.get_channel(self.bot.server_data[member.guild.id]["welcome-channel"])
        message = self.bot.server_data[member.guild.id]["goodbye"]

        await channel.send(message.format(member=member.mention))

    async def on_reaction_add(self, reaction, user):
        if isinstance(user, discord.User):
            return

        if reaction.emoji == "\N{CHERRY BLOSSOM}" and reaction.message.id in self.bot.events:
            if user.id in self.bot.events[reaction.message.id]["users"]:
                return

            self.bot.events[reaction.message.id]["users"].append(user.id)
            self.bot.user_data[user.id]["flowers"] += self.bot.events[reaction.message.id]["amount"]
            await reaction.message.channel.send("{} has been awarded {} :cherry_blossom:".format(user.name, self.bot.events[reaction.message.id]["amount"]))


        if self.bot.server_data[user.guild.id]["starboard-channel"] == "":
            return

        if reaction.message.channel.id == self.bot.server_data[user.guild.id]["starboard-channel"]:
            return

        if reaction.message.id in self.bot.server_data["starred-messages"]:
            return

        if reaction.emoji == "\N{WHITE MEDIUM STAR}" and reaction.count == self.bot.server_data[user.guild.id]["starboard-limit"]:
            embed = discord.Embed(colour=discord.Colour(0x277b0), description = reaction.message.content)
            embed.set_author(name=reaction.message.author.display_name, icon_url=reaction.message.author.avatar_url.replace("webp","jpg"))
            embed.set_footer(text="Generated by NecroBot", icon_url="https://cdn.discordapp.com/avatars/317619283377258497/a491c1fb5395e699148fcfed2ee755cf.jpg?size=128")
            message = reaction.message
            if message.embeds:
                data = message.embeds[0]
                if data.type == 'image':
                    embed.set_image(url=data.url)

            if message.attachments:
                file = message.attachments[0]
                if file.url.lower().endswith(('png', 'jpeg', 'jpg', 'gif', 'webp')):
                    embed.set_image(url=file.url)
                else:
                    embed.add_field(name='Attachment', value=f'[{file.filename}]({file.url})', inline=False)
            
            await self.bot.get_channel(self.bot.server_data[user.guild.id]["starboard-channel"]).send(content="In {}".format(reaction.message.channel.mention), embed=embed)
            self.bot.server_data["starred-messages"].append(reaction.message.id)



def setup(bot):
    bot.add_cog(NecroEvents(bot))
