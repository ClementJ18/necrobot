import discord
from discord.ext import commands

import feedparser
import asyncio

class RSS():
    """Cog for keeping up to date with a bunch of different stuff."""

    def __init__(self, bot):
        self.bot = bot
        self.base_youtube = "https://www.youtube.com/feeds/videos.xml?channel_id={}"
        self.task = self.bot.loop.create_task(self.youtube_task())

    def __unload(self):
        self.task.cancel()

    @commands.command()
    async def youtube(self, ctx, youtuber_id : str, channel : discord.TextChannel = None):
        """Add/remove/edit a youtube stream. As long as you provide a channel, the stream will be set to that
        channel, if you don't provide a channel, the stream will be removed. To gt the channel id follow the steps:

        1. Go to the YouTube channel you want to track
        2. View the page’s source code
        3. Look for the following text: externalId
        4. Get the value right after externalID (it’ll look something like UCBcRF18a7Qf58cCRy5xuWwQ

        {usage}

        __Example__
        `{pre}youtube UCBcRF18a7Qf58cCRy5xuWwQ #streams`
        """
        if channel is None:
            await self.bot.query_executer("DELETE FROM necrobot.Youtube WHERE guild_id = $1 AND youtuber_id = $2", ctx.guild.id, youtuber_id)
            
            return await ctx.send("You are no longer subscribed to this youtube channel")

        async with self.bot.session.get(self.base_youtube.format(youtuber_id)) as resp:
            if resp.status != 200:
                return await ctx.send(":negative_squared_cross_mark: | This channel does not exist, double check the youtuber id.")
            
            video = feedparser.parse(await resp.text())["entries"][0]

        embed = discord.Embed(title=video["title"], description=video["summary"][:2000])
        embed.set_author(name=video["author_detail"]["name"], url=video["author_detail"]["href"])
        embed.set_thumbnail(url=video["media_thumbnail"][0]["url"])
        embed.set_footer(text="Generated by Necrobot", icon_url=self.bot.user.avatar_url_as(format="png", size=128))
        await self.bot.query_executer(
            """INSERT INTO necrobot.Youtube AS yt VALUES ($1, $2, $3, NOW()) 
            ON CONFLICT (guild_id,youtuber_id) 
            DO UPDATE SET channel_id = $2 WHERE yt.guild_id = $1 AND yt.youtuber_id = $3""",
            ctx.guild.id, channel.id, youtuber_id
        )

        await ctx.send(f":white_check_mark: | New videos from this channel will now be posted in {channel.mention}. Here's a sample:", embed=embed)

    async def youtube_task(self):
        await self.bot.wait_until_ready()
        while not self.bot.is_closed():
            feeds = await self.bot.query_executer("SELECT * FROM necrobot.Youtube")
            for feed in feeds:
                async with self.bot.session.get(self.base_youtube.format(feed[2])) as resp:
                    parsed_feed = feedparser.parse(await resp.text())["entries"]
                    parsed_feed.reverse()

                for entry in parsed_feed:
                    if entry["published"] < feed[3]:
                        continue

                    embed = discord.Embed(title=entry["title"], description=entry["summary"])
                    embed.set_author(name=entry["author_detail"]["name"], url=entry["author_detail"]["href"])
                    embed.set_thumbnail(url=entry["media_thumbnail"]["url"])
                    embed.set_footer(text="Generated by Necrobot", icon_url=self.bot.user.avatar_url_as(format="png", size=128))

                    await self.bot.get_guild(feed[0]).get_channel(feed[1]).send(embed=embed)

                await self.bot.query_executer("UPDATE necrobot.Youtube SET last_update = NOW() WHERE guild_id = $1 AND youtuber_id = $2", feed[0], feed[2])

            try:
                await asyncio.sleep(900)
            except asyncio.CancelledError:
                return

def setup(bot):
    bot.add_cog(RSS(bot))